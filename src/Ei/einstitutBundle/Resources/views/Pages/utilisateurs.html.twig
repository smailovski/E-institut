{% extends "EiAdministrationBundle::Master-Base-admin.html.twig" %}
{% block title %}
     {{ parent() }}   | Annuaire
{% endblock %}
{% block stylesheets %}

{% endblock %}

{% block javascripts %}

{% endblock %}

{% block content %}

<section class="grid_9">
    <div class="block-border">
        <div class="block-content">
            <div class="block-controls">
                <h1>Utilisateurs 
                     <a href="{{ path('new_utilisateur', {'id':'add'}) }}"><img src="{{ asset('bundles/eieinstitut/images/icons/fugue/plus-circle-blue.png') }}" width="16" height="16"> Ajouter</a>
                 </h1> 
            </div> 
                
                
            <table class="table sortable no-margin" cellspacing="0" width="100%">

                <thead>
                    <tr>
                        <th class="black-cell">Statut</th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="#" title="Sort up" class="sort-up"></a>
                                <a href="#" title="Sort down" class="sort-down"></a>
                            </span>
                            Pseudo
                        </th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="#" title="Sort up" class="sort-up"></a>
                                <a href="#" title="Sort down" class="sort-down"></a>
                            </span>
                            Nom & prénom
                        </th>
                        <th scope="col">Email</th>
                        <th scope="col">
                            <span class="column-sort">
                                <a href="#" title="Sort up" class="sort-up"></a>
                                <a href="#" title="Sort down" class="sort-down"></a>
                            </span>
                            Dérnière date de connexion
                        </th>

                        <th scope="col">
                            <span class="column-sort">
                                <a href="#" title="Sort up" class="sort-up"></a>
                                <a href="#" title="Sort down" class="sort-down"></a>
                            </span>
                            Sth
                        </th>
                        <th scope="col" class="table-actions">Actions</th>
                    </tr>
                </thead>

                <tbody>

                 {% for User in Users %}
                
                
                    <tr>
                        <td class="th table-check-cell"><input type="checkbox" name="selected[]" id="table-selected-1" value="1"></td>
                        <td>{{ User.username }}</td>
                        <td></td>
                        <td></td>
                        <td>{{ User.lastlogin|time_ago_in_words  }}</td>
                        <td></td>
                        <td class="table-actions">
                            <a href="{{ path('modifier_utilisateur', {'id': User.id }) }}" title="Edit" class="with-tip"><img src="{{ asset('bundles/eieinstitut/images/icons/fugue/pencil.png') }}" width="16" height="16"></a>
                            <a onclick="DeleteUser( {{ User.id }} ); return false;"  title="Delete" class="with-tip"><img src="{{ asset('bundles/eieinstitut/images/icons/fugue/cross-circle.png') }}" width="16" height="16"></a>
                        </td>
                    </tr>
                   {% endfor %}
                </tbody>

            </table>


        </div>	
    </div>
</section>


{% endblock %}

{% block javascripts_Bottom %}
<script>
    
    //Delete Modal
            function DeleteUser(id)
            {
                    $.modal({
                            content: 'Voulez-vous supprimer cet utilisateur ?'
                                              ,
                            title: 'Confirmation',
                            maxWidth: 300,
                            buttons: {
                                    'Confirmer': function(win) 
                                    { 
                                       console.log("Entrer ");
                                    // Action 
                                    $.post(
                                           "{{ path('supprimer_utilisateur') }}",
                                               {param_id : id  },
                                               function(message)
                                               {  
                                                  console.log("Retourner ");
                                                  $("body").load("{{ path('Utilisateurs') }}");
                                                  console.log("success ");
                                               }
                                       );
                                    
                                    
                                     },
                                    'Annuler': function(win) { win.closeModal(); }
                            }
                    });
            }
    
    
    /*
     * Table sorting
     */

    // A small classes setup...
    $.fn.dataTableExt.oStdClasses.sWrapper = 'no-margin last-child';
    $.fn.dataTableExt.oStdClasses.sInfo = 'message no-margin';
    $.fn.dataTableExt.oStdClasses.sLength = 'float-left';
    $.fn.dataTableExt.oStdClasses.sFilter = 'float-right';
    $.fn.dataTableExt.oStdClasses.sPaging = 'sub-hover paging_';
    $.fn.dataTableExt.oStdClasses.sPagePrevEnabled = 'control-prev';
    $.fn.dataTableExt.oStdClasses.sPagePrevDisabled = 'control-prev disabled';
    $.fn.dataTableExt.oStdClasses.sPageNextEnabled = 'control-next';
    $.fn.dataTableExt.oStdClasses.sPageNextDisabled = 'control-next disabled';
    $.fn.dataTableExt.oStdClasses.sPageFirst = 'control-first';
    $.fn.dataTableExt.oStdClasses.sPagePrevious = 'control-prev';
    $.fn.dataTableExt.oStdClasses.sPageNext = 'control-next';
    $.fn.dataTableExt.oStdClasses.sPageLast = 'control-last';

    // Apply to table
    $('.sortable').each(function(i)
    {
        // DataTable config
        var table = $(this),
                oTable = table.dataTable({
            /*
             * We set specific options for each columns here. Some columns contain raw data to enable correct sorting, so we convert it for display
             * @url http://www.datatables.net/usage/columns
             */
            aoColumns: [
                {bSortable: false}, // No sorting for this columns, as it only contains checkboxes
                {sType: 'string'},
                {bSortable: 'string'},
                {sType: 'string'},
                {sType: 'date'},
                {sType: 'numeric', bUseRendered: false, fnRender: function(obj) // Size is given as float for sorting, convert to format 000 x 000
                    {
                        return obj.aData[obj.iDataColumn].split('.').join(' x ');
                    }
                },
                {bSortable: false}	// No sorting for actions column
            ],
            /*
             * Set DOM structure for table controls
             * @url http://www.datatables.net/examples/basic_init/dom.html
             */
            sDom: '<"block-controls"<"controls-buttons"p>>rti<"block-footer clearfix"lf>',
            /*
             * Callback to apply template setup
             */
            fnDrawCallback: function()
            {
                this.parent().applyTemplateSetup();
            },
            fnInitComplete: function()
            {
                this.parent().applyTemplateSetup();
            }
        });

        // Sorting arrows behaviour
        table.find('thead .sort-up').click(function(event)
        {
            // Stop link behaviour
            event.preventDefault();

            // Find column index
            var column = $(this).closest('th'),
                    columnIndex = column.parent().children().index(column.get(0));

            // Send command
            oTable.fnSort([[columnIndex, 'asc']]);

            // Prevent bubbling
            return false;
        });
        table.find('thead .sort-down').click(function(event)
        {
            // Stop link behaviour
            event.preventDefault();

            // Find column index
            var column = $(this).closest('th'),
                    columnIndex = column.parent().children().index(column.get(0));

            // Send command
            oTable.fnSort([[columnIndex, 'desc']]);

            // Prevent bubbling
            return false;
        });
    });

 
            
         </script>
    
{% endblock %}
