<?php

namespace Ei\einstitutBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MessagesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MessagesRepository extends EntityRepository
{
    
     	public function RepondreMessage($idmessage) 
  {
     
      $Messages = new Messages();
      $Messages->setObjet("");
      $Messages->setMessage("");
      $Messages->setDateMessage(new \DateTime());
      $Messages->setEtat(0);
      $Messages->setMessagesUser($User);
      $em->persist($Messages);
      $em->flush();
      return null;
    }

	public function MessageRecu($UserID) {



   $em = $this->getEntityManager();
   //$UserConnected = $this->get('security.context')->getToken()->getUser();
   $UserConnected = $em->getRepository('EieinstitutBundle:User')->findBy(array('ville'=>'a'));
   $query = $em->createQuery("SELECT m,u FROM EieinstitutBundle:Messages m JOIN m.users u WHERE u.id = :user")// WHERE m.id = '1'
   			  ->setParameter('user', $UserID);

	$messages_recus = $query->getResult();
	//print_r $messages_recus;
	//$messages_recus = $em->getRepository('EieinstitutBundle:Messages')->findAll();
//WHERE a.city = 'Berlin'
    return  $messages_recus ;
}


public function MessageEnvoyee($UserID) {
   $em = $this->getEntityManager();
   
   $query = $em->createQuery("SELECT m FROM EieinstitutBundle:Messages m JOIN m.users u  WHERE m.messages_user = :user")
   			   ->setParameter('user', $UserID);
	$messages_envoyée = $query->getResult();
	//$messages_recus = $em->getRepository('EieinstitutBundle:Messages')->findAll();
//WHERE a.city = 'Berlin'
    return  $messages_envoyée ;
}
  public function SupprimerMessage($idmessage) 
  {
      $messages_recus = $em->getRepository('EieinstitutBundle:Messages')->findOneBy(array('id'=>5));
      $em->remove($messages_recus);
      $em->flush();
      return null;
    }
	public function NouveauMessage($idmessage) 
  {
      
      $Messages = new Messages();
      $Messages->setObjet("");
      $Messages->setMessage("");
      $Messages->setDateMessage(new \DateTime());
      $Messages->setEtat(0);
      $Messages->setMessagesUser($User);
      // $Messages->setObjet("");
      $em->persist($Messages);
      $em->flush();
      return null;
    }
    
   


}
