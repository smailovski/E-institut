<?php

namespace Proxies\__CG__\Ei\einstitutBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class BaseContacts extends \Ei\einstitutBundle\Entity\BaseContacts implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getBaseContactListes()
    {
        $this->__load();
        return parent::getBaseContactListes();
    }

    public function setBaseContactListes($u2)
    {
        $this->__load();
        return parent::setBaseContactListes($u2);
    }

    public function setBaseContactClics(\Doctrine\Common\Collections\ArrayCollection $values)
    {
        $this->__load();
        return parent::setBaseContactClics($values);
    }

    public function getBaseContactClics()
    {
        $this->__load();
        return parent::getBaseContactClics();
    }

    public function addBaseContactClics($value)
    {
        $this->__load();
        return parent::addBaseContactClics($value);
    }

    public function removeBaseContactClics($value)
    {
        $this->__load();
        return parent::removeBaseContactClics($value);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEmail($email)
    {
        $this->__load();
        return parent::setEmail($email);
    }

    public function getEmail()
    {
        $this->__load();
        return parent::getEmail();
    }

    public function setNom($nom)
    {
        $this->__load();
        return parent::setNom($nom);
    }

    public function getNom()
    {
        $this->__load();
        return parent::getNom();
    }

    public function setPrenom($prenom)
    {
        $this->__load();
        return parent::setPrenom($prenom);
    }

    public function getPrenom()
    {
        $this->__load();
        return parent::getPrenom();
    }

    public function setPays($pays)
    {
        $this->__load();
        return parent::setPays($pays);
    }

    public function getPays()
    {
        $this->__load();
        return parent::getPays();
    }

    public function setOrganisme($organisme)
    {
        $this->__load();
        return parent::setOrganisme($organisme);
    }

    public function getOrganisme()
    {
        $this->__load();
        return parent::getOrganisme();
    }

    public function setAbonne($abonne)
    {
        $this->__load();
        return parent::setAbonne($abonne);
    }

    public function getAbonne()
    {
        $this->__load();
        return parent::getAbonne();
    }

    public function setBlacklist($blacklist)
    {
        $this->__load();
        return parent::setBlacklist($blacklist);
    }

    public function getBlacklist()
    {
        $this->__load();
        return parent::getBlacklist();
    }

    public function setEtat($etat)
    {
        $this->__load();
        return parent::setEtat($etat);
    }

    public function getEtat()
    {
        $this->__load();
        return parent::getEtat();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'email', 'nom', 'prenom', 'pays', 'organisme', 'abonne', 'blacklist', 'etat', 'base_contact_listes', 'base_contacts_clic');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}