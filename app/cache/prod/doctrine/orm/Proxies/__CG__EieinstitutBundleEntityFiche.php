<?php

namespace Proxies\__CG__\Ei\einstitutBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Fiche extends \Ei\einstitutBundle\Entity\Fiche implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setPreconisation(\Doctrine\Common\Collections\ArrayCollection $values)
    {
        $this->__load();
        return parent::setPreconisation($values);
    }

    public function getPreconisation()
    {
        $this->__load();
        return parent::getPreconisation();
    }

    public function addPreconisation($value)
    {
        $this->__load();
        return parent::addPreconisation($value);
    }

    public function removePreconisation($value)
    {
        $this->__load();
        return parent::removePreconisation($value);
    }

    public function setFicheTags(\Doctrine\Common\Collections\ArrayCollection $values)
    {
        $this->__load();
        return parent::setFicheTags($values);
    }

    public function getFicheTags()
    {
        $this->__load();
        return parent::getFicheTags();
    }

    public function addFicheTags($value)
    {
        $this->__load();
        return parent::addFicheTags($value);
    }

    public function removeFicheTags($value)
    {
        $this->__load();
        return parent::removeFicheTags($value);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($u)
    {
        $this->__load();
        return parent::setUser($u);
    }

    public function getTheme()
    {
        $this->__load();
        return parent::getTheme();
    }

    public function setTheme($theme)
    {
        $this->__load();
        return parent::setTheme($theme);
    }

    public function getDomaine()
    {
        $this->__load();
        return parent::getDomaine();
    }

    public function setDomaine($domaine)
    {
        $this->__load();
        return parent::setDomaine($domaine);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitre($titre)
    {
        $this->__load();
        return parent::setTitre($titre);
    }

    public function getTitre()
    {
        $this->__load();
        return parent::getTitre();
    }

    public function setDateCreation($dateCreation)
    {
        $this->__load();
        return parent::setDateCreation($dateCreation);
    }

    public function getDateCreation()
    {
        $this->__load();
        return parent::getDateCreation();
    }

    public function setResume($resume)
    {
        $this->__load();
        return parent::setResume($resume);
    }

    public function getResume()
    {
        $this->__load();
        return parent::getResume();
    }

    public function setUrl($url)
    {
        $this->__load();
        return parent::setUrl($url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setStatut($statut)
    {
        $this->__load();
        return parent::setStatut($statut);
    }

    public function getStatut()
    {
        $this->__load();
        return parent::getStatut();
    }

    public function setFiche_tags($fiche_tags)
    {
        $this->__load();
        return parent::setFiche_tags($fiche_tags);
    }

    public function getFiche_tags()
    {
        $this->__load();
        return parent::getFiche_tags();
    }

    public function addTags(\Ei\einstitutBundle\Entity\Tags $tag)
    {
        $this->__load();
        return parent::addTags($tag);
    }

    public function getList($page = 1, $maxperpage = 10)
    {
        $this->__load();
        return parent::getList($page, $maxperpage);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'titre', 'dateCreation', 'resume', 'url', 'type', 'statut', 'domaine', 'theme', 'preconisation', 'fiche_tags', 'users', 'user');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}